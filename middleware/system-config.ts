export default defineNuxtRouteMiddleware(async (to) => {
  // Ch·ªâ ch·∫°y tr√™n client side
  if (process.client) {
    try {
      const { systemInfo, loading, error } = useGlobalSystemConfig()
      
      // N·∫øu ƒëang loading, ƒë·ª£i m·ªôt ch√∫t
      if (loading.value) {
        await new Promise(resolve => setTimeout(resolve, 100))
      }
      
      // N·∫øu c√≥ l·ªói khi load system config, log warning nh∆∞ng kh√¥ng block navigation
      if (error.value) {
        console.warn('System config load failed:', error.value)
      }
      
      // Log system info ƒë·ªÉ debug
      if (systemInfo.value.name) {
        console.log(`üåê Navigating to: ${to.path} | System: ${systemInfo.value.name} v${systemInfo.value.version}`)
      }
      
    } catch (err) {
      console.warn('System config middleware error:', err)
      // Kh√¥ng throw error ƒë·ªÉ kh√¥ng block navigation
    }
  }
})

